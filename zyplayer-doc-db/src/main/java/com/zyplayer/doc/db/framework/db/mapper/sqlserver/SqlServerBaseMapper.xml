<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zyplayer.doc.db.framework.db.mapper.base.BaseMapper">

	<resultMap id="TableColumnDescDtoMap" type="com.zyplayer.doc.db.framework.db.dto.TableColumnDescDto" >
		<result column="NAME" property="name" jdbcType="VARCHAR" />
		<result column="ISIDENITY" property="selfIncrement" jdbcType="VARCHAR" />
		<result column="TYPE" property="type" jdbcType="VARCHAR" />
		<result column="NULLABLE" property="nullable" jdbcType="VARCHAR" />
		<result column="LENGTH" property="length" jdbcType="VARCHAR" />
		<result column="ISPRAMARY" property="primaryKey" jdbcType="VARCHAR" />
		<result column="DESCRIPTION" property="description" jdbcType="VARCHAR" />
	</resultMap>

	<resultMap id="QueryTableColumnDescDtoMap" type="com.zyplayer.doc.db.framework.db.dto.QueryTableColumnDescDto" >
		<result column="TABLE_NAME" property="tableName" jdbcType="VARCHAR" />
		<result column="COLUMN_NAME" property="columnName" jdbcType="VARCHAR" />
		<result column="DESCRIPTION" property="description" jdbcType="VARCHAR" />
	</resultMap>

	<select id="getDatabaseList" resultType="com.zyplayer.doc.db.framework.db.dto.DatabaseInfoDto">
		SELECT NAME as dbName FROM Master..SysDatabases ORDER BY NAME
	</select>

	<select id="getTableStatus" resultType="com.zyplayer.doc.db.controller.vo.TableStatusVo">
		select #{tableName} as name
	</select>

	<select id="getTableList" resultType="com.zyplayer.doc.db.framework.db.dto.TableInfoDto">
		SELECT NAME as tableName, ID as tableId
		FROM ${dbName}..SysObjects Where XType='U' ORDER BY NAME
	</select>

	<select id="getTableColumnList" resultType="com.zyplayer.doc.db.framework.db.dto.TableColumnDescDto">
		WITH PRIMARYINFO( COLUMNNAME ,ISPRAMARY) AS
		(
			SELECT C.NAME,'true' AS COLUMNNAME
			FROM ${dbName}..SYSINDEXES I
			JOIN ${dbName}..SYSINDEXKEYS K ON I.ID = K.ID AND I.INDID = K.INDID
			JOIN ${dbName}..SYSOBJECTS O ON I.ID = O.ID
			JOIN ${dbName}..SYSCOLUMNS C ON I.ID=C.ID AND K.COLID = C.COLID
			WHERE O.XTYPE = 'U'
			AND EXISTS(SELECT 1 FROM ${dbName}..SYSOBJECTS WHERE XTYPE = 'PK' AND NAME = I.NAME)
			AND O.NAME=#{tableName}
		)
		SELECT (
			SELECT IS_IDENTITY FROM ${dbName}.SYS.ALL_COLUMNS
			WHERE ${dbName}.SYS.ALL_COLUMNS.NAME=SYSCOLUMNS.NAME AND OBJECT_ID = OBJECT_ID('${dbName}..${tableName}')
		) selfIncrement, SYSCOLUMNS.NAME name,SYSTYPES.NAME type,Iif(SYSCOLUMNS.ISNULLABLE=1,'1','0') nullable,
		SYSCOLUMNS.LENGTH length,PRIMARYINFO.ISPRAMARY primaryKey
		FROM ${dbName}..SYSCOLUMNS
		LEFT JOIN PRIMARYINFO ON PRIMARYINFO.COLUMNNAME=NAME
		LEFT JOIN ${dbName}..SYSTYPES ON SYSCOLUMNS.XUSERTYPE = SYSTYPES.XUSERTYPE
		WHERE SYSCOLUMNS.ID = OBJECT_ID('${dbName}..${tableName}')
	</select>

	<select id="getTableAndColumnBySearch" resultMap="QueryTableColumnDescDtoMap">
		SELECT top 500
		A.name AS TABLE_NAME,B.name AS COLUMN_NAME,C.value AS DESCRIPTION
		FROM ${dbName}.sys.tables A
		INNER JOIN ${dbName}.sys.columns B ON B.object_id = A.object_id
		LEFT JOIN ${dbName}.sys.extended_properties C ON C.major_id = B.object_id AND C.minor_id = B.column_id
		WHERE convert(nvarchar(max),C.value) like #{searchText} OR B.name like #{searchText}
	</select>

	<select id="getTableDescList" resultType="com.zyplayer.doc.db.framework.db.dto.TableDescDto">
		select 'TABLEDESC_SYS' as tableName, value as description, major_id as majorId
		from ${dbName}.sys.extended_properties
		WHERE minor_id=0
		<if test="tableName != null">
			and major_id=object_id(#{tableName})
		</if>
	</select>

	<insert id="updateTableDesc">
		IF ((SELECT COUNT(*) from ${dbName}..fn_listextendedproperty('MS_Description', 'SCHEMA', 'dbo', 'TABLE', #{tableName}, NULL, NULL)) > 0)
		EXEC ${dbName}..sp_updateextendedproperty @name = 'MS_Description', @value = #{newDesc}
		, @level0type = 'SCHEMA', @level0name = 'dbo'
		, @level1type = 'TABLE', @level1name = #{tableName}
		ELSE
		EXEC ${dbName}..sp_addextendedproperty @name = 'MS_Description', @value = #{newDesc}
		, @level0type = 'SCHEMA', @level0name = 'dbo'
		, @level1type = 'TABLE', @level1name = #{tableName}
	</insert>

	<insert id="updateTableColumnDesc">
		IF ((SELECT COUNT(*) from ${dbName}..fn_listextendedproperty('MS_Description', 'SCHEMA', 'dbo', 'TABLE', #{tableName}, 'COLUMN', #{columnName})) > 0)
		EXEC ${dbName}..sp_updateextendedproperty @name = 'MS_Description', @value = #{newDesc}
		, @level0type = 'SCHEMA', @level0name = 'dbo'
		, @level1type = 'TABLE', @level1name = #{tableName}
		, @level2type = 'COLUMN', @level2name = #{columnName}
		ELSE
		EXEC ${dbName}..sp_addextendedproperty @name = 'MS_Description', @value = #{newDesc}
		, @level0type = 'SCHEMA', @level0name = 'dbo'
		, @level1type = 'TABLE', @level1name = #{tableName}
		, @level2type = 'COLUMN', @level2name = #{columnName}
	</insert>

</mapper>

